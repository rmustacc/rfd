DDI_UFM_SLOT(9F)         Kernel Functions for Drivers         DDI_UFM_SLOT(9F)

NNAAMMEE
     ddddii__uuffmm__sslloott, ddddii__uuffmm__sslloott__sseett__vveerrssiioonn

SSYYNNOOPPSSIISS
     _v_o_i_d
     ddddii__uuffmm__sslloott__sseett__vveerrssiioonn(_d_d_i___u_f_m___s_l_o_t___t _*_u_s_p, _c_o_n_s_t _c_h_a_r _*_v_e_r_s_i_o_n);

     _v_o_i_d
     ddddii__uuffmm__sslloott__sseett__aattttrrss(_d_d_i___u_f_m___s_l_o_t___t _*_u_s_p, _d_d_i___u_f_m___a_t_t_r___t _a_t_t_r_s);

     _v_o_i_d
     ddddii__uuffmm__sslloott__sseett__pprriimmaarryy(_d_d_i___u_f_m___s_l_o_t___t _*_u_s_p, _b_o_o_l_e_a_n___t _i_s_p_r_i_m_a_r_y);

     _v_o_i_d
     ddddii__uuffmm__sslloott__sseett__mmiisscc(_d_d_i___u_f_m___s_l_o_t___t _*_u_s_p, _n_v_l_i_s_t___t _*_n_v_l);

IINNTTEERRFFAACCEE LLEEVVEELL
     EEvvoollvviinngg -- This interface is evolving still in illumos. API and ABI
     stability is not guaranteed.

PPAARRAAMMEETTEERRSS
     _u_s_p           A pointer to a UFM slot structure that was passed to the
                   driver in its ddi_ufm_op_fill_slot(9E) entry point.

     _v_e_r_s_i_o_n       A device-specific ASCII string that indicates the current
                   version of the firmware image in the slot.

     _a_t_t_r_s         The bitwise-inclusive-OR of one of several attributes of a
                   firmware slot. See the discussion of the
                   ddddii__uuffmm__oopp__ffiillll__sslloott() function in ddi_ufm(9E).

     _i_s_p_r_i_m_a_r_y     A boolean indicating whether or not this slot is the
                   currently active firmware slot.

     _n_v_l           An nvlist_t with ancillary, device-specific data.

DDEESSCCRRIIPPTTIIOONN
     The ddddii__uuffmm__sslloott__sseett__vveerrssiioonn(), ddddii__uuffmm__sslloott__sseett__aattttrrss(),
     ddddii__uuffmm__sslloott__sseett__pprriimmaarryy(), and ddddii__uuffmm__sslloott__sseett__mmiisscc() functions are
     used by device drivers to set information about a firmware slot on the
     slot structure _u_s_p as a part of implementing their
     ddi_ufm_op_fill_slot(9E) entry point. For more information on slots and
     the use of these functions, see the description of the
     ddddii__uuffmm__oopp__ffiillll__sslloott() function in ddi_ufm(9E).

     The ddddii__uuffmm__sslloott__sseett__vveerrssiioonn() function sets the version property of a
     firmware slot. The version should be a human-readable ASCII string that
     describes the current firmware revision in a way that makes sense to an
     administrator and someone who is referencing the documentation of a
     vendor.

     The ddddii__uuffmm__sslloott__sseett__aattttrrss() function describes attributes of a UFM slot.
     For example, whether the firmware in the slot can be read or written.

     The ddddii__uuffmm__sslloott__sseett__pprriimmaarryy() function is used to indicate whether a
     given slot is the primary or active slot. If a device only has a single
     slot, then the driver does not need to call this function. The slot will
     always be treated as the primary in that case.

     The ddddii__uuffmm__sslloott__sseett__mmiisscc() function is used by the driver to set
     ancillary key-value data that may be useful to a consumer. For example, a
     driver may use this method to encode specific information that the
     firmware provides about how or when it was produced or installed on the
     device. The driver should create an nvlist for this purpose with
     nvlist_alloc(9F).  Once the driver passes the nvlist to the
     ddddii__uuffmm__sslloott__sseett__mmiisscc() function, then the driver must not manipulate or
     free the nvlist at all.  It is the property of the UFM subsystem.

CCOONNTTEEXXTT
     These function should only be called in the context of the
     ddi_ufm_op_fill_slot(9E) entry point. However, these functions may be
     called from kkeerrnneell context.

SSEEEE AALLSSOO

illumos                        February 21, 2017                       illumos
